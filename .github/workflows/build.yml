name: build

on:
  push:
    paths-ignore:
      - ".dev_scripts/**"
      - ".github/**.md"
      - "demo/**"
      - "docker/**"
      - "tools/**"
      - "README.md"
      - "README_zh-CN.md"

  pull_request:
    paths-ignore:
      - ".dev_scripts/**"
      - ".github/**.md"
      - "demo/**"
      - "docker/**"
      - "docs/**"
      - "docs_zh-CN/**"
      - "tools/**"
      - "README.md"
      - "README_zh-CN.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_cpu:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: [3.7]
        torch: [1.7.1, 1.8.1, 1.9.1, 1.10.1]
        include:
          - torch: 1.7.1
            torchvision: 0.8.2
          - torch: 1.8.1
            torchvision: 0.9.1
          - torch: 1.9.1
            torchvision: 0.10.1
          - torch: 1.10.1
            torchvision: 0.11.2
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: pip install pip --upgrade && pip install wheel
      - name: Install PyTorch
        run: pip install torch==${{matrix.torch}}+cpu torchvision==${{matrix.torchvision}}+cpu -f https://download.pytorch.org/whl/cpu/torch_stable.html
      - name: Install mmdet dependencies
        run: |
          pip install -U openmim
          mim install 'mmcv-full==1.7.0'
          python -c 'import mmcv; print(mmcv.__version__)'
          pip install pycocotools
          pip install -r requirements/tests.txt -r requirements/optional.txt
          pip install albumentations>=0.3.2 --no-binary imgaug,albumentations
          pip install git+https://github.com/cocodataset/panopticapi.git
      - name: Show pip list
        run: pip list
      - name: Build and install
        run: rm -rf .eggs && pip install -v -e .
      - name: Run unittests and generate coverage report
        run: |
          coverage run --branch --source mmdet -m pytest tests/
          coverage xml
          coverage report -m

  build_cuda102:
    runs-on: ubuntu-22.04
    container:
      image: pytorch/pytorch:1.8.1-cuda10.2-cudnn7-devel
    strategy:
      matrix:
        python-version: [3.7]
        include:
          - torch: 1.8.1
            cuda: 10.2
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: pip install pip --upgrade && pip install wheel
      - name: Fetch GPG keys
        run: |
          apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub
          apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub
      - name: Install system dependencies
        run: apt-get update && apt-get install -y ffmpeg libsm6 libxext6 git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6
      - name: Install mmdet dependencies
        run: |
          pip install -U openmim
          mim install 'mmcv-full==1.7.0'
          python -c 'import mmcv; print(mmcv.__version__)'
          pip install pycocotools
          pip install -r requirements/tests.txt -r requirements/optional.txt
          pip install albumentations>=0.3.2 --no-binary imgaug,albumentations
          pip install git+https://github.com/cocodataset/panopticapi.git
      - name: Show pip list
        run: pip list
      - name: Build and install
        run: pip install -v -e .
      - name: Run unittests and generate coverage report
        run: |
          coverage run --branch --source mmdet -m pytest tests/
          coverage xml
          coverage report -m
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v2
      #   with:
      #     files: ./coverage.xml
      #     flags: unittests
      #     env_vars: OS,PYTHON
      #     name: codecov-umbrella
      #     fail_ci_if_error: false
